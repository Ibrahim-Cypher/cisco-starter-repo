{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\CISCO\\\\cisco-starter-repo\\\\sextant\\\\src\\\\components\\\\IPFetcher.js\",\n    _s = $RefreshSig$();\n\n// components/IPFetcher.js\nimport React, { useState, useEffect } from 'react';\nimport './ipfetcher.css'; // Import your styling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IPFetcher = _ref => {\n  _s();\n\n  let {\n    ipAddressType\n  } = _ref;\n  const [ipAddress, setIPAddress] = useState('');\n  useEffect(() => {\n    const fetchIPAddress = async () => {\n      try {\n        const response = await fetch(`https://api.ipify.org?format=json`);\n        const data = await response.json();\n        setIPAddress(data.ip);\n      } catch (error) {\n        console.error('Error fetching IP address:', error);\n      }\n    };\n\n    fetchIPAddress();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ip-fetcher\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: ipAddressType === 'IPv4' ? 'IPv4 Address' : 'IPv6 Address'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: ipAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IPFetcher, \"QGfGSubN5H0CtbKRt0xNgJowhgg=\");\n\n_c = IPFetcher;\nexport default IPFetcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"IPFetcher\");","map":{"version":3,"names":["React","useState","useEffect","IPFetcher","ipAddressType","ipAddress","setIPAddress","fetchIPAddress","response","fetch","data","json","ip","error","console"],"sources":["E:/projects/CISCO/cisco-starter-repo/sextant/src/components/IPFetcher.js"],"sourcesContent":["// components/IPFetcher.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './ipfetcher.css'; // Import your styling\r\n\r\nconst IPFetcher = ({ ipAddressType }) => {\r\n  const [ipAddress, setIPAddress] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchIPAddress = async () => {\r\n      try {\r\n        const response = await fetch(`https://api.ipify.org?format=json`);\r\n        const data = await response.json();\r\n        setIPAddress(data.ip);\r\n      } catch (error) {\r\n        console.error('Error fetching IP address:', error);\r\n      }\r\n    };\r\n\r\n    fetchIPAddress();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"ip-fetcher\">\r\n      <h2>{ipAddressType === 'IPv4' ? 'IPv4 Address' : 'IPv6 Address'}</h2>\r\n      <p>{ipAddress}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IPFetcher;\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,iBAAP,C,CAA0B;;;;AAE1B,MAAMC,SAAS,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAAEC;EAAF,CAAsB;EACvC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMK,cAAc,GAAG,YAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mCAAF,CAA5B;QACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;QACAL,YAAY,CAACI,IAAI,CAACE,EAAN,CAAZ;MACD,CAJD,CAIE,OAAOC,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAc,4BAAd,EAA4CA,KAA5C;MACD;IACF,CARD;;IAUAN,cAAc;EACf,CAZQ,EAYN,EAZM,CAAT;EAcA,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,wBACE;MAAA,UAAKH,aAAa,KAAK,MAAlB,GAA2B,cAA3B,GAA4C;IAAjD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAIC;IAAJ;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAvBD;;GAAMF,S;;KAAAA,S;AAyBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}